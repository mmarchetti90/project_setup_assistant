#!/usr/bin/env python3"""This script downloads the Hallmark gene sets from GSEA and prepares a term2gene table."""### ---------------------------------------- ###### ------------------MAIN------------------ ###import requestsfrom sys import argv### Define gene sets for downloadhallmark_gene_sets = ['ADIPOGENESIS',                      'ALLOGRAFT_REJECTION',                      'ANDROGEN_RESPONSE',                      'ANGIOGENESIS',                      'APICAL_JUNCTION',                      'APICAL_SURFACE',                      'APOPTOSIS',                      'BILE_ACID_METABOLISM',                      'CHOLESTEROL_HOMEOSTASIS',                      'COAGULATION',                      'COMPLEMENT',                      'DNA_REPAIR',                      'E2F_TARGETS',                      'EPITHELIAL_MESENCHYMAL_TRANSITION',                      'ESTROGEN_RESPONSE_EARLY',                      'ESTROGEN_RESPONSE_LATE',                      'FATTY_ACID_METABOLISM',                      'G2M_CHECKPOINT',                      'GLYCOLYSIS',                      'HEDGEHOG_SIGNALING',                      'HEME_METABOLISM',                      'HYPOXIA',                      'IL2_STAT5_SIGNALING',                      'IL6_JAK_STAT3_SIGNALING',                      'INFLAMMATORY_RESPONSE',                      'INTERFERON_ALPHA_RESPONSE',                      'INTERFERON_GAMMA_RESPONSE',                      'KRAS_SIGNALING_DN',                      'KRAS_SIGNALING_UP',                      'MITOTIC_SPINDLE',                      'MTORC1_SIGNALING',                      'MYC_TARGETS_V1',                      'MYC_TARGETS_V2',                      'MYOGENESIS',                      'NOTCH_SIGNALING',                      'OXIDATIVE_PHOSPHORYLATION',                      'P53_PATHWAY',                      'PANCREAS_BETA_CELLS',                      'PEROXISOME',                      'PI3K_AKT_MTOR_SIGNALING',                      'PROTEIN_SECRETION',                      'REACTIVE_OXYGEN_SPECIES_PATHWAY',                      'SPERMATOGENESIS',                      'TGF_BETA_SIGNALING',                      'TNFA_SIGNALING_VIA_NFKB',                      'UNFOLDED_PROTEIN_RESPONSE',                      'UV_RESPONSE_DN',                      'UV_RESPONSE_UP',                      'WNT_BETA_CATENIN_SIGNALING',                      'XENOBIOTIC_METABOLISM']### Download data and generate a term2gene tablespecies = argv[argv.index('--species') + 1]if species not in ['human', 'mouse']:        print('ERROR: unrecognized species. Acceptable values are "human" and "mouse"')else:        ### Init term2gene table        term2gene_text = ['gs_name\tgene_name']        ### Download data        for gene_set in hallmark_gene_sets:                # Define url                url = f'https://www.gsea-msigdb.org/gsea/msigdb/{species}/download_geneset.jsp?geneSetName=HALLMARK_{gene_set}&fileType=TSV'            response = requests.get(url)                if response.status_code == 200:                        data = response.content.decode('utf8').split('\n')                        data = [d for d in data if d.startswith('GENE_SYMBOLS')]                        if len(data) == 1:                                gene_symbols = [d for d in data[0].split(',')[1:]]                                for gs in gene_symbols:                                        term2gene_text.extend([f'{gene_set}\t{gs}' for gs in gene_symbols])        term2gene_text = '\n'.join(term2gene_text)        ### Save to file        with open(f'term2gene_hallmark_{species}.tsv', 'w') as term2gene_out:                term2gene_out.write(term2gene_text)